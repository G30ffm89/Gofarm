@keyframes chartjs-render-animation{from{opacity:.99}to{opacity:1}}.chartjs-render-monitor{animation:chartjs-render-animation 1ms}.chartjs-size-monitor,.chartjs-size-monitor-expand,.chartjs-size-monitor-shrink{position:absolute;direction:ltr;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1}.chartjs-size-monitor-expand>div{position:absolute;width:1000000px;height:1000000px;left:0;top:0}.chartjs-size-monitor-shrink>div{position:absolute;width:200%;height:200%;left:0;top:0}

html, body {
  height: 100%;
  font-size: 18px;
  font-family: "Ubuntu Mono", monospace;
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit; 
}


h2 {
  font-size: 22px;
  margin-bottom: 20px; 
  position: relative;
  margin-top: 0; 
}

#grid_home {
	display: grid;
  grid-template-rows: auto auto auto auto auto auto; /* You might need to adjust the number of 'auto' or use different units based on actual content */
  grid-template-columns: repeat(4, 1fr); /* 4 equal columns */
	gap: 5px;
  padding: 20px;
	width: 100%;
	height: 100%;
  padding-bottom: 1rem;
}

#led-container {
	grid-area: 2 / 1 / 3 / 5; /* Stays in Row 2, spans all 4 columns */
}

/* These three will now be on the same row (Row 3) */
#guage-container {
	grid-area: 3 / 1 / 4 / 2; /* Row 3, spans from column line 1 to 2 (1 column) */
}
#config-container {
	grid-area: 3 / 2 / 4 / 3; /* Row 3, spans from column line 2 to 3 (1 column) */
}
#camera-container {
	grid-area: 3 / 3 / 4 / 5; /* Row 3, spans from column line 3 to 5 (2 columns) */
}
#chart-container {
	grid-area: 4 / 1 / 5 / 5; /* Moved up to Row 4, spans all 4 columns */
}


.guage {
  display: flex;
  flex-direction: column; /* Stack items vertically */
  /* flex-wrap is usually not needed for a simple column layout
     unless the content inside each item is very tall and you want wrapping */
  justify-content: center; /* Align items vertically in the center within the .guage container */
  align-items: center; /* Align items horizontally in the center within the .guage container */
  width: 100%; /* Ensure the .guage container takes up the full width of its grid cell */
  gap: 10px; /* Add some space between the vertically stacked gauges */
}
#humid-guage,
#temp-guage {
  box-sizing: border-box;   
  flex: 1 1 200px;
  flex-grow: 1;
  flex-shrink: 1;

  max-width: 100%; /* Prevent them from growing beyond their intended max size if there's a lot of space */
  /* You might still want a height, or manage aspect ratio differently */
  box-sizing: border-box; /* Include padding and border in the element's total width and height */
}
.card-container{
  display:flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;
}


.card {
  min-width: 15em;
  border: 1px solid #ccc;
  background-color: rgba(255, 255, 255, 0.5);
  margin: 5px;
  border-radius: 5px;
  overflow: hidden;  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-content: stretch;
  align-items: start;
  flex-wrap: wrap;
  padding: 10px;
}
.led {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background-color: #ddd;
  margin-right: 10px;
  box-shadow: 0 0 5px #666;
}

.led.green {
  background-color: #0f0;
  box-shadow: 0 0 10px #0f0;
}

.led.red {
  background-color: #f00;
  box-shadow: 0 0 10px #f00;
}


.led-controls {
  display: flex;
  gap: 5px;
}


.led-controls button {
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  background-color: #4CAF50;
  color: white;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.led-controls button:hover {
  background-color: #367c39;
}

.led-controls button:disabled,
.led-controls button.disabled {
  opacity: 0.6;
  cursor: not-allowed;
}


.image-container{
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center; 
}

.config-controls {

  padding: 20px;
  border-radius: 5px;
  border: 1px solid #ccc; /* Example border */
}

.config-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
}

.config-item label {
  margin-right: 10px; 
  flex-basis: 60%; 
}

.config-item input {
  flex-basis: 35%; 
  padding: 5px;
  border: 1px solid #ccc;
  border-radius: 3px;
}

#config-button {
  display: block; /* Make button take full width of its container */
  width: 100%;
  padding: 10px;
  margin-top: 20px; 
  background-color: #4CAF50;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

#config-button:hover {
  background-color: #0056b3;
}

#humid-guage, #temp-guage {
  min-height: 160px; 
  min-width: 200px; 
  border: 1px dashed #aaa;
}

